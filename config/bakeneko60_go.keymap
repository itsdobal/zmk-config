/*
 * Copyright (c) 2023 Andrew Kannan
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
};

/ {
    behaviors {
        apostropheandcolon: apostropheandcolon {
            compatible = "zmk,behavior-tap-dance";
            label = "APOSTROPHEANDCOLON";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp SEMI>;
        };

        mediakeys: mediakeys {
            compatible = "zmk,behavior-tap-dance";
            label = "MEDIAKEYS";
            #binding-cells = <0>;
            bindings = <&kp K_MUTE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;
        };
    };

    macros {
        macro0: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp C &kp V &kp UNDER &kp LS(Z) &kp N9 &kp N9 &kp LS(W) &kp B &kp STAR &kp LS(H) &kp UNDER &kp W &kp N3 &kp LS(F) &kp X &kp EXCL &kp AT &kp LS(Q) &kp DOT &kp LS(M)>;
            label = "NEW_MACRO";
        };

        macro1: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp N1 &kp S &kp S &kp LS(L) &kp N3 &kp M &kp N0 &kp LS(N) &kp S &kp EXCL &kp MINUS &kp LS(H) &kp LS(O) &kp LS(M) &kp LS(E) &kp MINUS &kp LS(S) &kp LS(T) &kp LS(A) &kp LS(R)>;
            label = "MACRO1";
        };

        macro2: macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp I &kp LS(F) &kp N &kp O &kp V &kp W &kp Y &kp V &kp Z &kp O &kp N0 &kp F &kp O &kp V &kp V &kp E &kp F>;
            label = "MACRO2";
        };

        macro3: macro3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp A &kp X &kp K &kp A &kp R &kp W &kp I &kp P &kp Q &kp A &kp P &kp N0 &kp G &kp Y &kp LS(G) &kp X &kp I>;
            label = "MACRO3";
        };

        macro4: macro4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp F &kp U &kp LS(D) &kp N &kp LS(E) &kp Z &kp T &kp A &kp N2 &kp LS(D) &kp LS(U) &kp D &kp P &kp LS(C) &kp LS(V) &kp T &kp DOT &kp N6 &kp LS(V) &kp H>;
            label = "MACRO4";
        };

        macro5: macro5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(T) &kp U &kp Q &kp R &kp A &kp N9 &kp MINUS &kp J &kp Y &kp N &kp N &kp U &kp H &kp MINUS &kp N &kp O &kp N &kp Q &kp O &kp H>;
            label = "MACRO5";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  | BKSP|BKSP|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |  SHIFT  | MO(1)  |
            // |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
            // ------------------------------------------------------------------------------------------

            bindings = <
&kp DELETE            &kp F1  &kp F2  &kp F3    &kp F4  &kp F5  &kp F6         &kp F7            &kp F8  &kp F9  &kp F10    &kp F11              &kp F12        &kp BACKSLASH  &kp TILDE
&gresc                &kp Q   &kp W   &kp E     &kp R   &kp T   &kp PAGE_UP    &kp Y             &kp U   &kp I   &kp O      &kp P                &kp BACKSPACE                 &kp BACKSPACE
&mt LEFT_CONTROL TAB  &kp A   &kp S   &kp D     &kp F   &kp G   &kp PAGE_DOWN  &kp H             &kp J   &kp K   &kp L      &apostropheandcolon                                &kp RET
&kp LSHFT                     &kp Z   &kp X     &kp C   &kp V   &kp B          &kp LEFT_CONTROL  &kp N   &kp M   &kp COMMA  &kp PERIOD           &kp RSHFT                     &mo 4
&kp LGUI              &mo 1           &kp LALT                  &lt 2 SPACE                                      &kp RALT   &kp RGUI             &mo 3                         &kp RCTRL
            >;
        };

        left_layer1 {
            // ------------------------------------------------------------------------------------------------
            // |    `   | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |     | DEL  |
            // | EFCT REV|   |  UP |   | HUEUP | SATUP | BRIUP | SPDUP |      |  PGUP |    |     |    |       |
            // | EFCT FWD | LT |  DN  | RT | HUEDN | SATDN | BRIDN | SPDDN | HOME | PGDN | END  |  | BOOTLDR  |
            // |             |     |      |      |     |     |     |     |     |     |     |         |        |
            // |         |      |      |             TOG RGB                | PRT SCR |       |       |  MO(2)|
            // ------------------------------------------------------------------------------------------------

            bindings = <
&trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans      &trans  &trans
&trans  &trans    &kp UP    &trans     &trans  &trans  &trans  &trans  &kp NUMBER_7  &kp N8        &kp N9        &kp ASTERISK  &trans              &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  &trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS                         &trans
&trans            &trans    &trans     &trans  &trans  &trans  &trans  &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH           &trans
&trans  &trans              &trans                     &kp N0                                      &kp PSCRN     &trans        &kp PERIOD          &mo 2
            >;
        };

        spacebar_layer {
            // ------------------------------------------------------------------------------------------------
            // | BT CLR |     |     |     |     |     |     |     |     |     |     |    |    |       |       |
            // |  BT 1   |   |     |   |       |       |       |       |   |     |    |     |     |           |
            // |   BT 2   |    |      |    |       |       |       |       |      |      |      |  |   Reset  |
            // |    BT 3     |     |      |      |     |     |     |     |     |     |     |         |        |
            // |   BT 4  |      |      |                                    |         |       |       |       |
            // ------------------------------------------------------------------------------------------------

            bindings = <
&trans              &macro0          &macro1        &macro2        &macro3               &macro4               &macro5         &trans  &trans            &trans                &trans                 &trans  &trans  &trans  &trans
&kp LA(LEFT_ARROW)  &kp LA(LS(TAB))  &kp UP_ARROW   &kp LA(TAB)    &kp LA(RIGHT)         &kp LG(LS(NUMBER_6))  &kp LG(LS(N7))  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &trans                 &trans  &trans          &trans
&trans              &kp LEFT_ARROW   &kp DOWN       &kp RIGHT      &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))        &trans          &trans  &kp MINUS         &kp EQUAL             &kp BACKSLASH          &trans                  &trans
&trans                               &kp LA(LG(R))  &kp LA(LG(T))  &kp LA(LG(A))         &trans                &trans          &trans  &trans            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans          &trans
&trans              &trans                          &trans                                                     &trans                                                          &trans                 &trans  &trans          &trans
            >;
        };

        right_layer2 {
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &trans  &trans  &trans  &trans          &trans             &trans           &trans      &trans  &sys_reset
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans        &trans  &trans  &trans  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT          &kp C_PLAY_PAUSE
&trans           &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans        &trans  &trans  &trans  &trans          &trans             &trans                               &trans
&trans                            &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans           &trans        &trans  &trans  &trans  &trans          &trans             &trans           &trans              &trans
&trans           &trans                            &trans                                          &trans                                  &trans             &trans           &trans              &trans
            >;
        };

        layer_4 {
            bindings = <
&trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp TILDE
&kp ESCAPE        &trans        &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans     &trans                    &trans
&kp TAB           &trans        &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans                               &trans
&trans                          &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans     &trans                    &trans
&kp LEFT_CONTROL  &trans                      &trans                              &kp SPACE                             &trans  &trans     &trans                    &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans          &trans                  &trans                          &trans  &trans  &trans          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans          &trans                  &trans                          &trans  &trans  &trans          &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bt {
            timeout-ms = <50>;
            key-positions = <61 62>;
            bindings = <&mo 2>;
        };

        gaminglayer {
            bindings = <&tog 4>;
            key-positions = <15 28>;
        };

        slash-and-questionmark {
            bindings = <&kp SLASH>;
            key-positions = <52 51>;
        };

        mediakeys {
            bindings = <&mediakeys>;
            key-positions = <26 25>;
        };

        caps-lock-combo {
            bindings = <&kp CAPSLOCK>;
            key-positions = <33 37>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <43 44>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <44 45>;
        };

        newpage {
            bindings = <&kp LG(T)>;
            key-positions = <43 46>;
        };

        closepage {
            bindings = <&kp LG(W)>;
            key-positions = <43 47>;
        };

        refresh {
            bindings = <&kp LG(R)>;
            key-positions = <43 45 47>;
        };

        alt-enter {
            bindings = <&kp ENTER>;
            key-positions = <45 46>;
        };
    };
};
