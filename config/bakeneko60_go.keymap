/*
 * Copyright (c) 2023 Andrew Kannan
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
};

/ {
    behaviors {
        apostropheandcolon: apostropheandcolon {
            compatible = "zmk,behavior-tap-dance";
            label = "APOSTROPHEANDCOLON";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp SEMI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  | BKSP|BKSP|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |  SHIFT  | MO(1)  |
            // |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
            // ------------------------------------------------------------------------------------------

            bindings = <
&kp DELETE            &kp F1  &kp F2  &kp F3    &kp F4  &kp F5  &kp F6       &kp F7  &kp F8  &kp F9  &kp F10    &kp F11              &kp F12        &kp BACKSLASH  &kp TILDE
&gresc                &kp Q   &kp W   &kp E     &kp R   &kp T   &trans       &kp Y   &kp U   &kp I   &kp O      &kp P                &kp BACKSPACE                 &kp BACKSPACE
&mt LEFT_CONTROL TAB  &kp A   &kp S   &kp D     &kp F   &kp G   &trans       &kp H   &kp J   &kp K   &kp L      &apostropheandcolon                                &kp RET
&kp LSHFT                     &kp Z   &kp X     &kp C   &kp V   &kp B        &trans  &kp N   &kp M   &kp COMMA  &kp PERIOD           &kp RSHFT                     &mo 4
&kp LGUI              &mo 1           &kp LALT                  &lt 2 SPACE                          &kp RALT   &kp RGUI             &mo 3                         &kp RCTRL
            >;
        };

        left_layer1 {
            // ------------------------------------------------------------------------------------------------
            // |    `   | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |     | DEL  |
            // | EFCT REV|   |  UP |   | HUEUP | SATUP | BRIUP | SPDUP |      |  PGUP |    |     |    |       |
            // | EFCT FWD | LT |  DN  | RT | HUEDN | SATDN | BRIDN | SPDDN | HOME | PGDN | END  |  | BOOTLDR  |
            // |             |     |      |      |     |     |     |     |     |     |     |         |        |
            // |         |      |      |             TOG RGB                | PRT SCR |       |       |  MO(2)|
            // ------------------------------------------------------------------------------------------------

            bindings = <
&trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans      &trans  &trans
&trans  &trans    &kp UP    &trans     &trans  &trans  &trans  &trans  &kp NUMBER_7  &kp N8        &kp N9        &kp ASTERISK  &trans              &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  &trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS                         &trans
&trans            &trans    &trans     &trans  &trans  &trans  &trans  &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH           &trans
&trans  &trans              &trans                     &kp N0                                      &kp PSCRN     &trans        &kp PERIOD          &mo 2
            >;
        };

        spacebar_layer {
            // ------------------------------------------------------------------------------------------------
            // | BT CLR |     |     |     |     |     |     |     |     |     |     |    |    |       |       |
            // |  BT 1   |   |     |   |       |       |       |       |   |     |    |     |     |           |
            // |   BT 2   |    |      |    |       |       |       |       |      |      |      |  |   Reset  |
            // |    BT 3     |     |      |      |     |     |     |     |     |     |     |         |        |
            // |   BT 4  |      |      |                                    |         |       |       |       |
            // ------------------------------------------------------------------------------------------------

            bindings = <
&trans              &trans           &trans        &trans       &trans                &trans                &trans          &trans     &trans            &trans                &trans                 &trans  &trans  &trans  &trans
&kp LA(LEFT_ARROW)  &kp LA(LS(TAB))  &kp UP_ARROW  &kp LA(TAB)  &kp LA(RIGHT)         &kp LG(LS(NUMBER_6))  &kp LG(LS(N7))  &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &trans                 &trans  &trans          &trans
&trans              &kp LEFT_ARROW   &kp DOWN      &kp RIGHT    &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))        &trans          &kp UNDER  &kp MINUS         &kp PLUS              &kp BACKSLASH          &trans                  &sys_reset
&trans                               &trans        &trans       &trans                &trans                &trans          &trans     &trans            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans          &trans
&trans              &trans                         &trans                                                   &trans                                                             &trans                 &trans  &trans          &trans
            >;
        };

        right_layer2 {
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans           &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans        &trans  &trans  &trans  &trans  &trans  &trans                  &sys_reset
&trans                            &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans           &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans           &trans                            &trans                                          &trans                          &trans  &trans  &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans          &trans                  &trans                          &trans  &trans  &trans          &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans          &trans                  &trans                          &trans  &trans  &trans          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans          &trans                  &trans                          &trans  &trans  &trans          &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bt {
            timeout-ms = <50>;
            key-positions = <61 62>;
            bindings = <&mo 2>;
        };
    };
};
